---
version: 2.1

orbs:
  docker: circleci/docker@1.0.1

commands:
  build_jahia:
    description: "Build Jahia's images for jahiastic-jahia"
    parameters:
      jver:
        type: string
      base_url:
        type: string
      xml_suffix:
        type: string
      tag_suffix:
        type: string
        default: "<< pipeline.git_branch >>"
      dbms_type:
        type: string
      debug_tools:
        type: string
      ffmpeg:
        type: string
      libreoffice:
        type: string
      ds_in_db:
        type: string
      healthcheck_ver:
        type: string
        default: "2.0.2"
      latest:
        type: boolean
        default: False
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          step-name: "Build jahia/jahia:<< parameters.jver >><< parameters.tag_suffix >>"
          tag: "<< parameters.jver >><< parameters.tag_suffix >>"
          image: "jahia/jahia"
          dockerfile: Dockerfile
          extra_build_args:
            '
            --build-arg BASE_URL="<< parameters.base_url >>"
            --build-arg DBMS_TYPE="<< parameters.dbms_type >>"
            --build-arg INSTALL_FILE_SUFFIX="<< parameters.xml_suffix >>"
            --build-arg DEBUG_TOOLS="<< parameters.debug_tools >>"
            --build-arg FFMPEG="<< parameters.ffmpeg >>"
            --build-arg LIBREOFFICE="<< parameters.libreoffice >>"
            --build-arg DS_IN_DB="<< parameters.ds_in_db >>"
            --build-arg HEALTHCHECK_VER="<< parameters.healthcheck_ver >>"
            --no-cache
            '
  push_jahia:
    description: "Push Jahia's images"
    parameters:
      jver:
        type: string
      tag_suffix:
        type: string
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/push:
          step-name: "Push jahia/jahia:<< parameters.jver >><< parameters.tag_suffix >>"
          image: "jahia/jahia"
          tag: "<< parameters.jver >><< parameters.tag_suffix >>"
  test_jahia:
    description: "Testing Jahia's images"
    steps:
      - run:
          name: import db schema
          command: |
            set +o pipefail
            echo "simply wait 15s for mysql before import schema..."
            sleep 15
            echo "setting max_allowed_packet..."
              mysql -u root -p$MYSQL_ROOT_PASSWORD -h $DB_HOST --protocol=tcp -e "set global max_allowed_packet=134217728;" 
            echo "now importing schema..."
            echo  mysql -u $DB_USER -p$DB_PASS -h $DB_HOST --protocol=tcp -D $DB_NAME
            cat /data/digital-factory-data/db/sql/schema/mysql/01-* | \
              mysql -u $DB_USER -p$DB_PASS -h $DB_HOST --protocol=tcp -D $DB_NAME
      - run:
          name: start jahia entrypoint
          background: True
          command: |
            set +o pipefail
            env
            free -m
            /entrypoint.sh
      - run:
          name: healtcheck test
          command: |
            set +o pipefail
            for i in {1..666}; do
              echo "iteration $i/666..."
              jsonhealth=$(curl -m 1 http://localhost:8080/healthcheck -s -u root:$SUPER_USER_PASSWORD||exit 0)
              echo $jsonhealth
              if (test "$(echo $jsonhealth | jq -r '.status')" = "GREEN"); then
                  exit 0
              fi
              echo "Not ready yet"
              echo
              sleep 1
            done
            echo "you are a failure"
            exit 1


jobs:
  t8000:
    docker:
      - image: jahia/jahia:8.0.0.0
        environment:
          SUPER_USER_PASSWORD: jahia
          MYSQL_ROOT_PASSWORD: jahia
          DB_HOST: localhost
          DB_PASS: jahia
          PROCESSING_SERVER: "true"
          MAX_RAM_PERCENTAGE: "70"
          RESTORE_MODULE_STATES: "false"
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: jahia
          MYSQL_DATABASE: jahia
          MYSQL_USER: jahia
          MYSQL_PASSWORD: jahia
    steps:
      - test_jahia
  b8000_default:
    executor: docker/docker
    steps:
      - build_jahia:
          jver: "8.0.0.0"
          tag_suffix: ""
          latest: True
          xml_suffix: "_v8"
          base_url: "https://downloads.jahia.com/downloads/jahia/jahia8.0.0/Jahia-EnterpriseDistribution-8.0.0.0-r60557.4681.jar"
          dbms_type: "mariadb"
          ds_in_db: "true"
          debug_tools: "false"
          ffmpeg: "false"
          libreoffice: "false"
  b8000_fs:
    executor: docker/docker
    steps:
      - build_jahia:
          jver: "8.0.0.0"
          tag_suffix: "_fs"
          latest: False
          xml_suffix: "_v8"
          base_url: "https://downloads.jahia.com/downloads/jahia/jahia8.0.0/Jahia-EnterpriseDistribution-8.0.0.0-r60557.4681.jar"
          dbms_type: "mariadb"
          ds_in_db: "false"
          debug_tools: "false"
          ffmpeg: "false"
          libreoffice: "false"
  b7341_default:
    executor: docker/docker
    steps:
      - build_jahia:
          jver: "7.3.4.1"
          tag_suffix: ""
          xml_suffix: ""
          base_url: "http://downloads.jahia.com/downloads/jahia/jahia7.3.4/Jahia-EnterpriseDistribution-7.3.4.1-r60321.4663.jar"
          dbms_type: "mariadb"
          ds_in_db: "true"
          debug_tools: "false"
          ffmpeg: "false"
          libreoffice: "false"
          healthcheck_ver: "1.0.11"

workflows:
  version: 2
  build_all_jahia:
    jobs:
      - t8000:
          filters:
            branches:
              only: master
      #- b8000_default:
        #
      #    context: cloud-qa
      #    filters:
      #      branches:
      #        only: master
      #- b8000_fs:
      #    context: cloud-qa
      #    filters:
      #      branches:
      #        only: master
      #- b7341_default:
      #    context: cloud-qa
      #    filters:
      #      branches:
      #        only: master
    

